{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","avatar","src","alt","message","likesCounter","likesCount","maxLength","maxLengthCreator","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","textAreaContainer","Field","component","Textarea","name","placeholder","validate","required","addButtons","addPostButton","MyPosts","React","memo","console","log","postsElements","posts","reverse","map","post","id","textAreaLabelBlock","posts_block__label","post_new_block","formData","addPostCreator","newPostText","connect","state","profilePage","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateUserStatus","ProfileInfo","profile","style","profileInfo","userInfoContainer","userMainInfo","photos","small","descriptionContainer","userName","fullName","userDescription","aboutMe","job","lookingForAJob","userSocial","Preloader","Profile","content","MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.ed614661.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"textAreaLabelBlock\":\"MyPosts_textAreaLabelBlock__1Xb8W\",\"posts_block__label\":\"MyPosts_posts_block__label__198ip\",\"posts\":\"MyPosts_posts__3BjBR\",\"post_new_block\":\"MyPosts_post_new_block__3__AS\",\"textAreaContainer\":\"MyPosts_textAreaContainer__2Tyuj\",\"addButtons\":\"MyPosts_addButtons__33nPh\",\"addPostButton\":\"MyPosts_addPostButton__2phmE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__sCYRo\",\"avatar\":\"Post_avatar__3A0KT\",\"likesCounter\":\"Post_likesCounter__R0XXl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__3FldQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__8UlYV\",\"cover_img\":\"ProfileInfo_cover_img__1XDIF\",\"userInfoContainer\":\"ProfileInfo_userInfoContainer__29elh\",\"descriptionContainer\":\"ProfileInfo_descriptionContainer__2EW9B\",\"userName\":\"ProfileInfo_userName__1wgpn\",\"userDescription\":\"ProfileInfo_userDescription__1RvuT\",\"userMainInfo\":\"ProfileInfo_userMainInfo__2kUiU\",\"job\":\"ProfileInfo_job__1gzGY\",\"avatar\":\"ProfileInfo_avatar__iRRUQ\",\"userSocial\":\"ProfileInfo_userSocial__2MDuh\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.avatar}>\r\n                <img src=\"https://www.pngkey.com/png/full/301-3012756_login-avatar-comments-username-icons-png.png\" alt=\"user avatar\"/>\r\n            </div>\r\n            <div>\r\n                {props.message}\r\n            </div>\r\n            <div className={s.likesCounter}>\r\n                likes {props.likesCount}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Textarea } from \"./../../common/FormsControls/FormsControls\"\r\n\r\nconst maxLength = maxLengthCreator(10);\r\n\r\n// form\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={s.textAreaContainer}>\r\n        <Field component={Textarea} name=\"newPostText\" placeholder=\"Enter post text!\"\r\n          validate={[required, maxLength]} />\r\n      </div>\r\n\r\n      <div className={s.addButtons}>\r\n        <button className={s.addPostButton}>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\n// form wrapper\r\nconst AddNewPostReduxForm = reduxForm({\r\n  form: \"newPost\"\r\n})(AddNewPostForm)\r\n\r\n// component\r\nconst MyPosts = React.memo(props => {\r\n\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   return nextProps !== this.props\r\n  //     || nextState !== this.state;\r\n  // }\r\n\r\n  console.log(\"my posts render\");\r\n  // get\r\n  let postsElements = [...props.posts]\r\n    .reverse()\r\n    .map((post) => (\r\n      <Post key={post.id} id={post.id} message={post.message} likesCount={post.likesCount} />\r\n    ));\r\n\r\n  let onAddPost = (formData) => {\r\n    console.log(formData);\r\n    props.addPostCreator(formData.newPostText);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.textAreaLabelBlock}>\r\n        <h3 className={s.posts_block__label}>My posts</h3>\r\n\r\n        <div className={s.post_new_block}>\r\n          <AddNewPostReduxForm onSubmit={onAddPost} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  addPostCreator\r\n} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.profilePage.posts,\r\n  newPostText: state.profilePage.newPostText\r\n});\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     updateNewPostText: (text) => {\r\n//       let action = updateNewPostTextCreator(text);\r\n//       dispatch(action);\r\n//     },\r\n//     addPost: () => {\r\n//       let action = addPostCreator();\r\n//       dispatch(action);\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport default connect(mapStateToProps, {\r\n addPostCreator\r\n})(MyPosts);\r\n","import React, { useState, useEffect } from \"react\"\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    // after every render, if haven't dependencies\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {!editMode && <div onDoubleClick={activateEditMode}>\r\n                {props.status || \"_-_-_-_\"}\r\n            </div>}\r\n\r\n            {editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        value={status}\r\n                    />\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div className={style.profileInfo}>\r\n            <div className={style.userInfoContainer}>\r\n                <div className={style.userMainInfo}>\r\n                    <div className={style.avatar}>\r\n                        <img src={props.profile.photos.small} alt=\"user avatar\" />\r\n                    </div>\r\n                    <div className={style.descriptionContainer}>\r\n                        <div className={style.userName}>{props.profile.fullName}</div>\r\n                        <div className={style.userDescription}>{props.profile.aboutMe}</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={style.job}>\r\n                    {\r\n                        props.profile.lookingForAJob ?\r\n                            <div>Looking for a job</div>\r\n                            : null\r\n                    }\r\n\r\n                </div>\r\n                <div className={style.userSocial}>\r\n\r\n                </div>\r\n                <div>\r\n                    <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div className={s.content}>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateUserStatus={props.updateUserStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport { getUserProfile, getUserStatus, updateUserStatus } from \"../../redux/profile-reducer\"\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    // get id from url address\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if(!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }  \r\n\r\n  render() {\r\n\r\n    return (\r\n      <Profile\r\n        profile={this.props.profile}\r\n        {...this.props}\r\n        status={this.props.status}\r\n        updateUserStatus={this.props.updateUserStatus}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile, getUserStatus, updateUserStatus\r\n  }),\r\n  withRouter,\r\n  // withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}