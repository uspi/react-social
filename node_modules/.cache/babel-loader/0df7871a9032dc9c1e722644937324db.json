{"ast":null,"code":"import { profileAPI, usersAPI } from \"../api/api\";\nconst ADD_POST = \"ADD-POST\";\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\nconst SET_USER_STATUS = \"SET-USER-STATUS\";\nconst DELETE_POST = \"DELETE-POST\";\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: \"My first post\",\n    likesCount: 0\n  }, {\n    id: 2,\n    message: \"Second post\",\n    likesCount: 2\n  }, {\n    id: 3,\n    message: \"My third post\",\n    likesCount: 5\n  }],\n  profile: null,\n  status: \"\"\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        return { ...state,\n          posts: [...state.posts, {\n            id: 5,\n            message: action.newPostText,\n            likesCount: 0\n          }]\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SET_USER_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case SET_USER_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case DELETE_POST:\n      {\n        return { ...state,\n          POSTS: action.status\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default profileReducer; // action creators\n\nexport const addPostCreator = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setUserStatus = status => ({\n  type: SET_USER_STATUS,\n  status\n});\nexport const deletePost = postId => ({\n  type: DELETE_POST,\n  postId\n}); // thunks\n\nexport const getUserProfile = userId => dispatch => {\n  usersAPI.getProfile(userId).then(response => {\n    dispatch(setUserProfile(response.data));\n  });\n};\nexport const getUserStatus = userId => dispatch => {\n  profileAPI.getStatus(userId).then(response => {\n    if (response.data) {\n      dispatch(setUserStatus(response.data));\n    }\n  });\n};\nexport const updateUserStatus = status => dispatch => {\n  profileAPI.updateStatus(status).then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(setUserStatus(status));\n    }\n  });\n};","map":{"version":3,"sources":["E:/repositories/react-social/src/redux/profile-reducer.js"],"names":["profileAPI","usersAPI","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","DELETE_POST","initialState","posts","id","message","likesCount","profile","status","profileReducer","state","action","type","newPostText","POSTS","addPostCreator","setUserProfile","setUserStatus","deletePost","postId","getUserProfile","userId","dispatch","getProfile","then","response","data","getUserStatus","getStatus","updateUserStatus","updateStatus","resultCode"],"mappings":"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","sourcesContent":["import { profileAPI, usersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\r\nconst SET_USER_STATUS = \"SET-USER-STATUS\";\r\nconst DELETE_POST = \"DELETE-POST\";\r\n\r\nlet initialState = {\r\n  posts: [\r\n    { id: 1, message: \"My first post\", likesCount: 0 },\r\n    { id: 2, message: \"Second post\", likesCount: 2 },\r\n    { id: 3, message: \"My third post\", likesCount: 5 },\r\n  ],\r\n  profile: null,\r\n  status: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      return {\r\n        ...state,\r\n        posts: [\r\n          ...state.posts,\r\n          {\r\n            id: 5,\r\n            message: action.newPostText,\r\n            likesCount: 0,\r\n          },\r\n        ],\r\n      };\r\n    }\r\n    case SET_USER_PROFILE: {\r\n      return {\r\n        ...state,\r\n        profile: action.profile,\r\n      };\r\n    }\r\n    case SET_USER_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      };\r\n    }\r\n    case SET_USER_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      };\r\n    }\r\n    case DELETE_POST: {\r\n      return {\r\n        ...state,\r\n        POSTS: action.status,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default profileReducer;\r\n\r\n// action creators\r\nexport const addPostCreator = (newPostText) => ({\r\n  type: ADD_POST,\r\n  newPostText\r\n});\r\n\r\nexport const setUserProfile = (profile) => ({\r\n  type: SET_USER_PROFILE,\r\n  profile,\r\n});\r\n\r\nexport const setUserStatus = (status) => ({\r\n  type: SET_USER_STATUS,\r\n  status,\r\n});\r\n\r\nexport const deletePost = (postId) => ({\r\n  type: DELETE_POST,\r\n  postId,\r\n});\r\n\r\n// thunks\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n  usersAPI.getProfile(userId).then((response) => {\r\n    dispatch(setUserProfile(response.data));\r\n  });\r\n};\r\n\r\nexport const getUserStatus = (userId) => (dispatch) => {\r\n  profileAPI.getStatus(userId).then((response) => {\r\n    if (response.data) {\r\n      dispatch(setUserStatus(response.data));\r\n    }\r\n  });\r\n};\r\n\r\nexport const updateUserStatus = (status) => (dispatch) => {\r\n  profileAPI.updateStatus(status).then((response) => {\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(setUserStatus(status));\r\n    }\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}