{"ast":null,"code":"var _jsxFileName = \"E:\\\\repositories\\\\react-social\\\\src\\\\components\\\\common\\\\Paginator\\\\Paginator.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport style from \"./Paginator.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Paginator = ({\n  totalItemsCount,\n  pageSize,\n  currentPage,\n  onPageNumberChanged,\n  portionSize = 10\n}) => {\n  _s();\n\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages = [...pages, i];\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNubmer, setPortionNumber] = useState(1);\n  let leftProtionNumber = (portionSize - 1) * portionSize + 1;\n  let rightProtionNumber = portionNumber * portionSize; // let quantityPageButtons = 24;\n\n  let filteredPages = [];\n\n  for (let i = 0; i < pages.length; i++) {\n    if (i > currentPage - 5 && i < currentPage + 6) {\n      filteredPages = [...filteredPages, i + 1];\n      continue;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.paginationButtonsContainer,\n    children: filteredPages.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: currentPage === p ? style.selectedPageNumberBtn : style.pageNumberBtn,\n      onClick: () => {\n        onPageNumberChanged(p);\n      },\n      children: p\n    }, p, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Paginator, \"58Cs3yZ+JK2sU2s28N4SPSoIS7c=\");\n\n_c = Paginator;\nexport default Paginator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"sources":["E:/repositories/react-social/src/components/common/Paginator/Paginator.jsx"],"names":["React","useState","style","Paginator","totalItemsCount","pageSize","currentPage","onPageNumberChanged","portionSize","pagesCount","Math","ceil","pages","i","portionCount","portionNubmer","setPortionNumber","leftProtionNumber","rightProtionNumber","portionNumber","filteredPages","length","paginationButtonsContainer","map","p","selectedPageNumberBtn","pageNumberBtn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AACtBC,EAAAA,eADsB;AAEtBC,EAAAA,QAFsB;AAGtBC,EAAAA,WAHsB;AAItBC,EAAAA,mBAJsB;AAKtBC,EAAAA,WAAW,GAAG;AALQ,CAAD,KAMnB;AAAA;;AACF,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUP,eAAe,GAAGC,QAA5B,CAAjB;AAEA,MAAIO,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,GAAG,CAAC,GAAGA,KAAJ,EAAWC,CAAX,CAAR;AACH;;AAED,MAAIC,YAAY,GAAGJ,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB;AACA,MAAI,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIgB,iBAAiB,GAAG,CAACT,WAAW,GAAG,CAAf,IAAoBA,WAApB,GAAkC,CAA1D;AACA,MAAIU,kBAAkB,GAAGC,aAAa,GAAGX,WAAzC,CAXE,CAaF;;AACA,MAAIY,aAAa,GAAG,EAApB;;AACA,OAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACS,MAA1B,EAAkCR,CAAC,EAAnC,EAAuC;AAEnC,QAAIA,CAAC,GAAGP,WAAW,GAAG,CAAlB,IAAuBO,CAAC,GAAGP,WAAW,GAAG,CAA7C,EAAgD;AAC5Cc,MAAAA,aAAa,GAAG,CAAC,GAAGA,aAAJ,EAAmBP,CAAC,GAAG,CAAvB,CAAhB;AACA;AACH;AACJ;;AACD,sBACI;AAAK,IAAA,SAAS,EAAEX,KAAK,CAACoB,0BAAtB;AAAA,cAEQF,aAAa,CAACG,GAAd,CAAkBC,CAAC,iBACf;AACI,MAAA,SAAS,EAAElB,WAAW,KAAKkB,CAAhB,GACPtB,KAAK,CAACuB,qBADC,GAELvB,KAAK,CAACwB,aAHhB;AAII,MAAA,OAAO,EAAE,MAAM;AAAEnB,QAAAA,mBAAmB,CAACiB,CAAD,CAAnB;AAAwB,OAJ7C;AAAA,gBAKKA;AALL,OAAUA,CAAV;AAAA;AAAA;AAAA;AAAA,YADJ;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA3CM;;GAAMrB,S;;KAAAA,S;AA6Cb,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport style from \"./Paginator.module.css\"\r\n\r\nexport const Paginator = ({\r\n    totalItemsCount,\r\n    pageSize,\r\n    currentPage,\r\n    onPageNumberChanged,\r\n    portionSize = 10\r\n}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages = [...pages, i];\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNubmer, setPortionNumber] = useState(1);\r\n    let leftProtionNumber = (portionSize - 1) * portionSize + 1;\r\n    let rightProtionNumber = portionNumber * portionSize;\r\n\r\n    // let quantityPageButtons = 24;\r\n    let filteredPages = [];\r\n    for (let i = 0; i < pages.length; i++) {\r\n\r\n        if (i > currentPage - 5 && i < currentPage + 6) {\r\n            filteredPages = [...filteredPages, i + 1]\r\n            continue;\r\n        }\r\n    }\r\n    return (\r\n        <div className={style.paginationButtonsContainer}>\r\n            {\r\n                filteredPages.map(p => (\r\n                    <div key={p}\r\n                        className={currentPage === p ?\r\n                            style.selectedPageNumberBtn\r\n                            : style.pageNumberBtn}\r\n                        onClick={() => { onPageNumberChanged(p) }}>\r\n                        {p}\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paginator;"]},"metadata":{},"sourceType":"module"}