{"ast":null,"code":"var _jsxFileName = \"E:\\\\repositories\\\\react-social\\\\src\\\\components\\\\Login\\\\Login.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form';\nimport { login } from '../../redux/auth-reducer';\nimport { required } from '../../utils/validators/validators';\nimport { createField, Input } from '../common/FormsControls/FormsControls';\nimport style from \"./Login.module.css\";\nimport formStyle from \"./../common/FormsControls/FormsControls.module.css\"; // form\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = ({\n  handleSubmit,\n  error\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: createField(\"Email\", \"email\", [required], Input)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: createField(\"Password\", \"password\", [required], Input, {\n        type: \"password\"\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [createField(null, \"rememberMe\", null, Input, {\n        type: \"checkbox\"\n      }), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Remember me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: formStyle.formSummaryError,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}; // container for login form component\n// state wrapper\n\n\n_c = LoginForm;\nconst LoginReduxForm = reduxForm({\n  form: \"user-login\"\n})(LoginForm); // component\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password, formData.rememberMe);\n  };\n\n  if (props.isAuth) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.content,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoginReduxForm, {\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Login;\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["E:/repositories/react-social/src/components/Login/Login.jsx"],"names":["React","connect","Redirect","Field","reduxForm","login","required","createField","Input","style","formStyle","LoginForm","handleSubmit","error","type","formSummaryError","LoginReduxForm","form","Login","props","onSubmit","formData","email","password","rememberMe","isAuth","content","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,SAASC,QAAT,QAAyB,mCAAzB;AACA,SAASC,WAAT,EAAsBC,KAAtB,QAAmC,uCAAnC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,oDAAtB,C,CAEA;;;;AACA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAA6B;AAC3C,sBACI;AAAM,IAAA,QAAQ,EAAED,YAAhB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,gBACKL,WAAW,CAAC,OAAD,EAAU,OAAV,EAAmB,CAACD,QAAD,CAAnB,EAA+BE,KAA/B;AADhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,gBACKD,WAAW,CAAC,UAAD,EAAa,UAAb,EAAyB,CAACD,QAAD,CAAzB,EAAqCE,KAArC,EAA4C;AAAEM,QAAAA,IAAI,EAAE;AAAR,OAA5C;AADhB;AAAA;AAAA;AAAA;AAAA,YALJ,eAQI;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,iBACKP,WAAW,CAAC,IAAD,EAAO,YAAP,EAAqB,IAArB,EAA2BC,KAA3B,EAAkC;AAAEM,QAAAA,IAAI,EAAE;AAAR,OAAlC,CADhB,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,EAYKD,KAAK,iBAAI;AAAK,MAAA,SAAS,EAAEH,SAAS,CAACK,gBAA1B;AAAA,gBACLF;AADK;AAAA;AAAA;AAAA;AAAA,YAZd,eAeI;AAAA,6BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CApBD,C,CAsBA;AACA;;;KAvBMF,S;AAwBN,MAAMK,cAAc,GAAGZ,SAAS,CAAC;AAC7Ba,EAAAA,IAAI,EAAE;AADuB,CAAD,CAAT,CAEpBN,SAFoB,CAAvB,C,CAIA;;AACA,MAAMO,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC3BF,IAAAA,KAAK,CAACd,KAAN,CAAYgB,QAAQ,CAACC,KAArB,EAA4BD,QAAQ,CAACE,QAArC,EAA+CF,QAAQ,CAACG,UAAxD;AACH,GAFD;;AAIA,MAAIL,KAAK,CAACM,MAAV,EAAkB;AACd,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAEhB,KAAK,CAACiB,OAAtB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEN;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAfD;;MAAMF,K;;AAiBN,MAAMS,eAAe,GAAIC,KAAD,KAAY;AAChCH,EAAAA,MAAM,EAAEG,KAAK,CAACC,IAAN,CAAWJ;AADa,CAAZ,CAAxB;;AAIA,eAAexB,OAAO,CAAC0B,eAAD,EAAkB;AAAEtB,EAAAA;AAAF,CAAlB,CAAP,CAAoCa,KAApC,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { createField, Input } from '../common/FormsControls/FormsControls';\r\nimport style from \"./Login.module.css\"\r\nimport formStyle from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\n// form\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"\">\r\n                {createField(\"Email\", \"email\", [required], Input)}\r\n                {/* <Field placeholder={\"Email\"} name={\"email\"} component={Input} validate={[required]} /> */}\r\n            </div>\r\n            <div className=\"\">\r\n                {createField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\r\n            </div>\r\n            <div className=\"\">\r\n                {createField(null, \"rememberMe\", null, Input, { type: \"checkbox\" })}\r\n                <span>Remember me</span>\r\n            </div>\r\n            {error && <div className={formStyle.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div><button>Login</button></div>\r\n        </form>\r\n    );\r\n};\r\n\r\n// container for login form component\r\n// state wrapper\r\nconst LoginReduxForm = reduxForm({\r\n    form: \"user-login\"\r\n})(LoginForm);\r\n\r\n// component\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\" />\r\n    }\r\n\r\n    return (\r\n        <div className={style.content}>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);"]},"metadata":{},"sourceType":"module"}