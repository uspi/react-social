{"ast":null,"code":"var _jsxFileName = \"E:\\\\repositories\\\\react-social\\\\src\\\\components\\\\Profile\\\\MyPosts\\\\MyPosts.jsx\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\nimport s from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport { Textarea } from \"./../../common/FormsControls/FormsControls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst maxLength = maxLengthCreator(10); // form\n\nconst AddNewPostForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.textAreaContainer,\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: Textarea,\n        name: \"newPostText\",\n        placeholder: \"Enter post text!\",\n        validate: [required, maxLength]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.addButtons,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: s.addPostButton,\n        children: \"Add post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}; // form wrapper\n\n\n_c = AddNewPostForm;\nconst AddNewPostReduxForm = reduxForm({\n  form: \"newPost\"\n})(AddNewPostForm); // component\n\nclass MyPosts extends React.Component {\n  render() {\n    // get\n    let postsElements = this.props.posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      id: post.id,\n      message: post.message,\n      likesCount: post.likesCount\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this));\n\n    let onAddPost = formData => {\n      console.log(formData);\n      this.props.addPostCreator(formData.newPostText);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.textAreaLabelBlock,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: s.posts_block__label,\n          children: \"My posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.post_new_block,\n          children: /*#__PURE__*/_jsxDEV(AddNewPostReduxForm, {\n            onSubmit: onAddPost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.posts,\n        children: postsElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default MyPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewPostForm\");","map":{"version":3,"sources":["E:/repositories/react-social/src/components/Profile/MyPosts/MyPosts.jsx"],"names":["React","Field","reduxForm","maxLengthCreator","required","s","Post","Textarea","maxLength","AddNewPostForm","props","handleSubmit","textAreaContainer","addButtons","addPostButton","AddNewPostReduxForm","form","MyPosts","Component","render","postsElements","posts","map","post","id","message","likesCount","onAddPost","formData","console","log","addPostCreator","newPostText","textAreaLabelBlock","posts_block__label","post_new_block"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,gBAAT,EAA2BC,QAA3B,QAA2C,sCAA3C;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,QAAT,QAAyB,4CAAzB;;AAEA,MAAMC,SAAS,GAAGL,gBAAgB,CAAC,EAAD,CAAlC,C,CAEA;;AACA,MAAMM,cAAc,GAAIC,KAAD,IAAW;AAChC,sBACE;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACC,YAAtB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEN,CAAC,CAACO,iBAAlB;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEL,QAAlB;AAA4B,QAAA,IAAI,EAAC,aAAjC;AAA+C,QAAA,WAAW,EAAC,kBAA3D;AACE,QAAA,QAAQ,EAAE,CAACH,QAAD,EAAWI,SAAX;AADZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAEH,CAAC,CAACQ,UAAlB;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAER,CAAC,CAACS,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAbD,C,CAeA;;;KAfML,c;AAgBN,MAAMM,mBAAmB,GAAGb,SAAS,CAAC;AACpCc,EAAAA,IAAI,EAAE;AAD8B,CAAD,CAAT,CAEzBP,cAFyB,CAA5B,C,CAIA;;AACA,MAAMQ,OAAN,SAAsBjB,KAAK,CAACkB,SAA5B,CAAsC;AAIpCC,EAAAA,MAAM,GAAG;AACP;AACA,QAAIC,aAAa,GAAG,KAAKV,KAAL,CAAWW,KAAX,CAAiBC,GAAjB,CAAsBC,IAAD,iBACvC,QAAC,IAAD;AAAoB,MAAA,EAAE,EAAEA,IAAI,CAACC,EAA7B;AAAiC,MAAA,OAAO,EAAED,IAAI,CAACE,OAA/C;AAAwD,MAAA,UAAU,EAAEF,IAAI,CAACG;AAAzE,OAAWH,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,YADkB,CAApB;;AAIA,QAAIG,SAAS,GAAIC,QAAD,IAAc;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAKlB,KAAL,CAAWqB,cAAX,CAA0BH,QAAQ,CAACI,WAAnC;AACD,KAHD;;AAMA,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAE3B,CAAC,CAAC4B,kBAAlB;AAAA,gCACE;AAAI,UAAA,SAAS,EAAE5B,CAAC,CAAC6B,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAK,UAAA,SAAS,EAAE7B,CAAC,CAAC8B,cAAlB;AAAA,iCACE,QAAC,mBAAD;AAAqB,YAAA,QAAQ,EAAER;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAK,QAAA,SAAS,EAAEtB,CAAC,CAACgB,KAAlB;AAAA,kBAA0BD;AAA1B;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA7BmC;;AA8BrC;AAED,eAAeH,OAAf","sourcesContent":["import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Textarea } from \"./../../common/FormsControls/FormsControls\"\r\n\r\nconst maxLength = maxLengthCreator(10);\r\n\r\n// form\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={s.textAreaContainer}>\r\n        <Field component={Textarea} name=\"newPostText\" placeholder=\"Enter post text!\"\r\n          validate={[required, maxLength]} />\r\n      </div>\r\n\r\n      <div className={s.addButtons}>\r\n        <button className={s.addPostButton}>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\n// form wrapper\r\nconst AddNewPostReduxForm = reduxForm({\r\n  form: \"newPost\"\r\n})(AddNewPostForm)\r\n\r\n// component\r\nclass MyPosts extends React.Component {\r\n\r\n  shouldComponentUpdate\r\n\r\n  render() {\r\n    // get\r\n    let postsElements = this.props.posts.map((post) => (\r\n      <Post key={post.id} id={post.id} message={post.message} likesCount={post.likesCount} />\r\n    ));\r\n\r\n    let onAddPost = (formData) => {\r\n      console.log(formData);\r\n      this.props.addPostCreator(formData.newPostText);\r\n    };\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div className={s.textAreaLabelBlock}>\r\n          <h3 className={s.posts_block__label}>My posts</h3>\r\n\r\n          <div className={s.post_new_block}>\r\n            <AddNewPostReduxForm onSubmit={onAddPost} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className={s.posts}>{postsElements}</div>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default MyPosts;\r\n"]},"metadata":{},"sourceType":"module"}