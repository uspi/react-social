{"ast":null,"code":"import { usersAPI } from \"../api/api\";\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET-USERS\";\nconst SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET-TOTAL-USERS-COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\nconst FOLLOWING_IN_PROGRESS = \"FOLLOWING-IN-PROGRESS\";\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: [...action.users]\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.pageNumber\n      };\n\n    case SET_TOTAL_USERS_COUNT:\n      return { ...state,\n        totalUsersCount: action.totalUsersCount\n      };\n\n    case TOGGLE_IS_FETCHING:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    case FOLLOWING_IN_PROGRESS:\n      return { ...state,\n        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id !== action.userId)\n      };\n\n    default:\n      return state;\n  }\n}; // action creators\n\n\nexport const followSuccess = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowSuccess = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = pageNumber => ({\n  type: SET_CURRENT_PAGE,\n  pageNumber\n});\nexport const setTotalUsersCount = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalUsersCount\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n  type: FOLLOWING_IN_PROGRESS,\n  isFetching,\n  userId\n}); // thunks\n\nexport const requestUsers = (page, pageSize) => async dispatch => {\n  dispatch(toggleIsFetching(true));\n  let data = await usersAPI.getUsers(page, pageSize);\n  dispatch(setUsers(data.items));\n  dispatch(setTotalUsersCount(data.totalCount));\n  dispatch(toggleIsFetching(false));\n};\nexport const follow = userId => {\n  return async dispatch => {\n    let apiMethod = usersAPI.follow.bind(usersAPI);\n    let actionCreator = followSuccess;\n    followUnfolowFlow(dispatch, userId, apiMethod, actionCreator);\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n\n    if (response.data.resultCode === 0) {\n      dispatch(actionCreator(userId));\n    }\n\n    dispatch(toggleFollowingProgress(false, userId));\n  };\n};\nexport const unfollow = userId => {\n  return async dispatch => {\n    let apiMethod = usersAPI.unfollow.bind(usersAPI);\n    let actionCreator = unfollowSuccess;\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n\n    if (response.data.resultCode === 0) {\n      dispatch(actionCreator(userId));\n    }\n\n    dispatch(toggleFollowingProgress(false, userId));\n  };\n}; // helpers\n\nconst followUnfolowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n  dispatch(toggleFollowingProgress(true, userId));\n  let response = await apiMethod(userId);\n\n  if (response.data.resultCode === 0) {\n    dispatch(actionCreator(userId));\n  }\n\n  dispatch(toggleFollowingProgress(false, userId));\n};\n\nexport default usersReducer;","map":{"version":3,"sources":["E:/repositories/react-social/src/redux/users-reducer.js"],"names":["usersAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","FOLLOWING_IN_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","map","u","id","userId","followed","pageNumber","filter","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","requestUsers","page","dispatch","data","getUsers","items","totalCount","follow","apiMethod","bind","actionCreator","followUnfolowFlow","response","resultCode","unfollow"],"mappings":"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","sourcesContent":["import { usersAPI } from \"../api/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET-USERS\";\r\nconst SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET-TOTAL-USERS-COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\r\nconst FOLLOWING_IN_PROGRESS = \"FOLLOWING-IN-PROGRESS\";\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 5,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          if (u.id === action.userId) {\r\n            return {\r\n              ...u,\r\n              followed: true,\r\n            };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          if (u.id === action.userId) {\r\n            return {\r\n              ...u,\r\n              followed: false,\r\n            };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: [...action.users],\r\n      };\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.pageNumber,\r\n      };\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.totalUsersCount,\r\n      };\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n    case FOLLOWING_IN_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id !== action.userId),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// action creators\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (pageNumber) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  pageNumber,\r\n});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  totalUsersCount,\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching,\r\n});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n  type: FOLLOWING_IN_PROGRESS,\r\n  isFetching,\r\n  userId,\r\n});\r\n\r\n// thunks\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n  let data = await usersAPI.getUsers(page, pageSize);\r\n  dispatch(setUsers(data.items));\r\n  dispatch(setTotalUsersCount(data.totalCount));\r\n  dispatch(toggleIsFetching(false));\r\n};\r\nexport const follow = (userId) => {\r\n  return async (dispatch) => {\r\n    let apiMethod = usersAPI.follow.bind(usersAPI);\r\n    let actionCreator = followSuccess;\r\n    followUnfolowFlow(dispatch, userId, apiMethod, actionCreator);\r\n\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n  };\r\n};\r\nexport const unfollow = (userId) => {\r\n  return async (dispatch) => {\r\n    let apiMethod = usersAPI.unfollow.bind(usersAPI);\r\n    let actionCreator = unfollowSuccess;\r\n\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n  };\r\n};\r\n\r\n// helpers\r\nconst followUnfolowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n  dispatch(toggleFollowingProgress(true, userId));\r\n  let response = await apiMethod(userId);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n  dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\nexport default usersReducer;\r\n"]},"metadata":{},"sourceType":"module"}