{"ast":null,"code":"var _jsxFileName = \"E:\\\\repositories\\\\react-social\\\\src\\\\components\\\\Login\\\\Login.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form';\nimport { login } from '../../redux/auth-reducer';\nimport { required } from '../../utils/validators/validators';\nimport { Input } from '../common/FormsControls/FormsControls';\nimport style from \"./Login.module.css\"; // form\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        placeholder: \"Email\",\n        name: \"email\",\n        component: Input,\n        validate: [required]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        placeholder: \"Password\",\n        name: \"password\",\n        component: Input,\n        validate: [required],\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        type: \"checkbox\",\n        name: \"rememberMe\",\n        component: Input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Remember me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}; // container for login form component\n// state wrapper\n\n\n_c = LoginForm;\nconst LoginReduxForm = reduxForm({\n  form: \"user-login\"\n})(LoginForm); // component\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password, formData.rememberMe);\n  };\n\n  if (props.isAuth) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.content,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoginReduxForm, {\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Login;\n\nconst mapStateToProps = () => ({});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["E:/repositories/react-social/src/components/Login/Login.jsx"],"names":["React","connect","Redirect","Field","reduxForm","login","required","Input","style","LoginForm","props","handleSubmit","LoginReduxForm","form","Login","onSubmit","formData","email","password","rememberMe","isAuth","content","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,SAASC,QAAT,QAAyB,mCAAzB;AACA,SAASC,KAAT,QAAsB,uCAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;;;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,sBACI;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACC,YAAtB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,WAAW,EAAE,OAApB;AAA6B,QAAA,IAAI,EAAE,OAAnC;AAA4C,QAAA,SAAS,EAAEJ,KAAvD;AAA8D,QAAA,QAAQ,EAAE,CAACD,QAAD;AAAxE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,WAAW,EAAE,UAApB;AAAgC,QAAA,IAAI,EAAE,UAAtC;AAAkD,QAAA,SAAS,EAAEC,KAA7D;AAAoE,QAAA,QAAQ,EAAE,CAACD,QAAD,CAA9E;AACA,QAAA,IAAI,EAAE;AADN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eAQI;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,UAAb;AAAyB,QAAA,IAAI,EAAE,YAA/B;AAA6C,QAAA,SAAS,EAAEC;AAAxD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eAYI;AAAA,6BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAjBD,C,CAmBA;AACA;;;KApBME,S;AAqBN,MAAMG,cAAc,GAAGR,SAAS,CAAC;AAC7BS,EAAAA,IAAI,EAAE;AADuB,CAAD,CAAT,CAEpBJ,SAFoB,CAAvB,C,CAIA;;AACA,MAAMK,KAAK,GAAIJ,KAAD,IAAW;AACrB,QAAMK,QAAQ,GAAIC,QAAD,IAAc;AAC3BN,IAAAA,KAAK,CAACL,KAAN,CAAYW,QAAQ,CAACC,KAArB,EAA4BD,QAAQ,CAACE,QAArC,EAA+CF,QAAQ,CAACG,UAAxD;AACH,GAFD;;AAIA,MAAKT,KAAK,CAACU,MAAX,EAAmB;AACf,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAEZ,KAAK,CAACa,OAAtB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEN;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAfD;;MAAMD,K;;AAiBN,MAAMQ,eAAe,GAAG,OAAO,EAAP,CAAxB;;AAGA,eAAerB,OAAO,CAACqB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAAoCS,KAApC,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\nimport style from \"./Login.module.css\"\r\n\r\n// form\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className=\"\">\r\n                <Field placeholder={\"Email\"} name={\"email\"} component={Input} validate={[required]} />\r\n            </div>\r\n            <div className=\"\">\r\n                <Field placeholder={\"Password\"} name={\"password\"} component={Input} validate={[required]}\r\n                type={\"password\"} />\r\n            </div>\r\n            <div className=\"\">\r\n                <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input} />\r\n                <span>Remember me</span>\r\n            </div>\r\n            <div><button>Login</button></div>\r\n        </form>\r\n    );\r\n};\r\n\r\n// container for login form component\r\n// state wrapper\r\nconst LoginReduxForm = reduxForm({\r\n    form: \"user-login\"\r\n})(LoginForm);\r\n\r\n// component\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if  (props.isAuth) {\r\n        return <Redirect to=\"/profile\"/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.content}>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = () => ({\r\n\r\n});\r\nexport default connect(mapStateToProps, { login })(Login);"]},"metadata":{},"sourceType":"module"}