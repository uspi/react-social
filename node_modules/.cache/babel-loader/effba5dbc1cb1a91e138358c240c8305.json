{"ast":null,"code":"import axios from \"axios\";\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n  headers: {\n    \"API-KEY\": \"d208ae23-b630-4cf0-abb9-16089b6de9c2\"\n  }\n});\nconst anonimInstance = axios.create({\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\"\n});\nexport const profileAPI = {\n  getProfile(userId) {\n    return anonimInstance.get(`profile/${userId}`);\n  },\n\n  getStatus(userId) {\n    return anonimInstance.get(`profile/status/${userId}`);\n  },\n\n  updateStatus(status) {\n    return instance.put(`profile/status`, {\n      status: status\n    });\n  }\n\n};\nexport const usersAPI = {\n  getUsers(pageNumber = 1, pageSize = 10) {\n    return instance.get(`users?page=${pageNumber}&count=${pageSize}`).then(response => {\n      return response.data;\n    });\n  },\n\n  unfollow(userId) {\n    return instance.delete(`follow/${userId}`);\n  },\n\n  follow(userId) {\n    return instance.post(`follow/${userId}`);\n  },\n\n  getProfile(userId) {\n    console.warn(\"Obsolete method. Please use profileAPI object.\");\n    return profileAPI.getProfile(userId);\n  }\n\n};\nexport const authAPI = {\n  me() {\n    return instance.get(`auth/me`);\n  },\n\n  login(email, password, rememberMe = false) {\n    return instance.post(`auth/login`, {\n      email,\n      password,\n      rememberMe\n    });\n  },\n\n  login(email, password, rememberMe = false) {\n    return instance.post(`auth/login`, {\n      email,\n      password,\n      rememberMe\n    });\n  }\n\n};","map":{"version":3,"sources":["E:/repositories/react-social/src/api/api.js"],"names":["axios","instance","create","withCredentials","baseURL","headers","anonimInstance","profileAPI","getProfile","userId","get","getStatus","updateStatus","status","put","usersAPI","getUsers","pageNumber","pageSize","then","response","data","unfollow","delete","follow","post","console","warn","authAPI","me","login","email","password","rememberMe"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC5BC,EAAAA,eAAe,EAAE,IADW;AAE5BC,EAAAA,OAAO,EAAE,+CAFmB;AAG5BC,EAAAA,OAAO,EAAE;AACP,eAAW;AADJ;AAHmB,CAAb,CAAjB;AAQA,MAAMC,cAAc,GAAGN,KAAK,CAACE,MAAN,CAAa;AAClCE,EAAAA,OAAO,EAAE;AADyB,CAAb,CAAvB;AAIA,OAAO,MAAMG,UAAU,GAAG;AACxBC,EAAAA,UAAU,CAACC,MAAD,EAAS;AACjB,WAAOH,cAAc,CAACI,GAAf,CAAoB,WAAUD,MAAO,EAArC,CAAP;AACD,GAHuB;;AAIxBE,EAAAA,SAAS,CAACF,MAAD,EAAS;AAChB,WAAOH,cAAc,CAACI,GAAf,CAAoB,kBAAiBD,MAAO,EAA5C,CAAP;AACD,GANuB;;AAOxBG,EAAAA,YAAY,CAACC,MAAD,EAAS;AACnB,WAAOZ,QAAQ,CAACa,GAAT,CAAc,gBAAd,EAA+B;AAAED,MAAAA,MAAM,EAAEA;AAAV,KAA/B,CAAP;AACD;;AATuB,CAAnB;AAYP,OAAO,MAAME,QAAQ,GAAG;AACtBC,EAAAA,QAAQ,CAACC,UAAU,GAAG,CAAd,EAAiBC,QAAQ,GAAG,EAA5B,EAAgC;AACtC,WAAOjB,QAAQ,CACZS,GADI,CACC,cAAaO,UAAW,UAASC,QAAS,EAD3C,EAEJC,IAFI,CAEEC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAJI,CAAP;AAKD,GAPqB;;AAStBC,EAAAA,QAAQ,CAACb,MAAD,EAAS;AACf,WAAOR,QAAQ,CAACsB,MAAT,CAAiB,UAASd,MAAO,EAAjC,CAAP;AACD,GAXqB;;AAatBe,EAAAA,MAAM,CAACf,MAAD,EAAS;AACb,WAAOR,QAAQ,CAACwB,IAAT,CAAe,UAAShB,MAAO,EAA/B,CAAP;AACD,GAfqB;;AAgBtBD,EAAAA,UAAU,CAACC,MAAD,EAAS;AACjBiB,IAAAA,OAAO,CAACC,IAAR,CAAa,gDAAb;AACA,WAAOpB,UAAU,CAACC,UAAX,CAAsBC,MAAtB,CAAP;AACD;;AAnBqB,CAAjB;AAsBP,OAAO,MAAMmB,OAAO,GAAG;AACrBC,EAAAA,EAAE,GAAG;AACH,WAAO5B,QAAQ,CAACS,GAAT,CAAc,SAAd,CAAP;AACD,GAHoB;;AAIrBoB,EAAAA,KAAK,CAACC,KAAD,EAAQC,QAAR,EAAkBC,UAAU,GAAG,KAA/B,EAAsC;AACzC,WAAOhC,QAAQ,CAACwB,IAAT,CAAe,YAAf,EAA4B;AAAEM,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,KAA5B,CAAP;AACD,GANoB;;AAOrBH,EAAAA,KAAK,CAACC,KAAD,EAAQC,QAAR,EAAkBC,UAAU,GAAG,KAA/B,EAAsC;AACzC,WAAOhC,QAAQ,CAACwB,IAAT,CAAe,YAAf,EAA4B;AAAEM,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,KAA5B,CAAP;AACD;;AAToB,CAAhB","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n  headers: {\r\n    \"API-KEY\": \"d208ae23-b630-4cf0-abb9-16089b6de9c2\",\r\n  },\r\n});\r\n\r\nconst anonimInstance = axios.create({\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n});\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return anonimInstance.get(`profile/${userId}`);\r\n  },\r\n  getStatus(userId) {\r\n    return anonimInstance.get(`profile/status/${userId}`);\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(`profile/status`, { status: status });\r\n  },\r\n};\r\n\r\nexport const usersAPI = {\r\n  getUsers(pageNumber = 1, pageSize = 10) {\r\n    return instance\r\n      .get(`users?page=${pageNumber}&count=${pageSize}`)\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n\r\n  unfollow(userId) {\r\n    return instance.delete(`follow/${userId}`);\r\n  },\r\n\r\n  follow(userId) {\r\n    return instance.post(`follow/${userId}`);\r\n  },\r\n  getProfile(userId) {\r\n    console.warn(\"Obsolete method. Please use profileAPI object.\");\r\n    return profileAPI.getProfile(userId);\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`);\r\n  },\r\n  login(email, password, rememberMe = false) {\r\n    return instance.post(`auth/login`, { email, password, rememberMe });\r\n  },\r\n  login(email, password, rememberMe = false) {\r\n    return instance.post(`auth/login`, { email, password, rememberMe });\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}