{"ast":null,"code":"var _jsxFileName = \"E:\\\\repositories\\\\react-social\\\\src\\\\hoc\\\\withAuthRedirect.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet mapStateToPropsForRedirect = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 16\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Component, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }, this);\n    }\n\n  }\n\n  return connect(mapStateToPropsForRedirect)(RedirectComponent);\n};","map":{"version":3,"sources":["E:/repositories/react-social/src/hoc/withAuthRedirect.js"],"names":["React","connect","Redirect","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","render","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAEA,IAAIC,0BAA0B,GAAIC,KAAD,KAAY;AAC3CC,EAAAA,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD;AADwB,CAAZ,CAAjC;;AAIA,OAAO,MAAME,gBAAgB,GAAIC,SAAD,IAAe;AAC7C,QAAMC,iBAAN,SAAgCT,KAAK,CAACQ,SAAtC,CAAgD;AAC9CE,IAAAA,MAAM,GAAG;AACP,UAAI,CAAC,KAAKC,KAAL,CAAWN,MAAhB,EAAwB;AACtB,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AAED,0BAAO,QAAC,SAAD,OAAe,KAAKM;AAApB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAP6C;;AAUhD,SAAOV,OAAO,CAACE,0BAAD,CAAP,CAAoCM,iBAApC,CAAP;AACD,CAZM","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return <Redirect to=\"login\" />;\r\n      }\r\n\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}