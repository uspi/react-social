{"ast":null,"code":"import _toConsumableArray from\"E:/repositories/react-social/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from\"react\";import{Field,reduxForm}from\"redux-form\";import{maxLengthCreator,required}from\"../../../utils/validators/validators\";import s from\"./MyPosts.module.css\";import Post from\"./Post/Post\";import{Textarea}from\"./../../common/FormsControls/FormsControls\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var maxLength=maxLengthCreator(10);// form\nvar AddNewPostForm=function AddNewPostForm(props){return/*#__PURE__*/_jsxs(\"form\",{onSubmit:props.handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{className:s.textAreaContainer,children:/*#__PURE__*/_jsx(Field,{component:Textarea,name:\"newPostText\",placeholder:\"Enter post text!\",validate:[required,maxLength]})}),/*#__PURE__*/_jsx(\"div\",{className:s.addButtons,children:/*#__PURE__*/_jsx(\"button\",{className:s.addPostButton,children:\"Add post\"})})]});};// form wrapper\nvar AddNewPostReduxForm=reduxForm({form:\"newPost\"})(AddNewPostForm);// component\nvar MyPosts=/*#__PURE__*/React.memo(function(props){// shouldComponentUpdate(nextProps, nextState) {\n//   return nextProps !== this.props\n//     || nextState !== this.state;\n// }\nconsole.log(\"my posts render\");// get\nvar postsElements=_toConsumableArray(props.posts).reverse().map(function(post){return/*#__PURE__*/_jsx(Post,{id:post.id,message:post.message,likesCount:post.likesCount},post.id);});var onAddPost=function onAddPost(formData){console.log(formData);props.addPostCreator(formData.newPostText);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:s.textAreaLabelBlock,children:[/*#__PURE__*/_jsx(\"h3\",{className:s.posts_block__label,children:\"My posts\"}),/*#__PURE__*/_jsx(\"div\",{className:s.post_new_block,children:/*#__PURE__*/_jsx(AddNewPostReduxForm,{onSubmit:onAddPost})})]}),/*#__PURE__*/_jsx(\"div\",{className:s.posts,children:postsElements})]});});export default MyPosts;","map":{"version":3,"sources":["E:/repositories/react-social/src/components/Profile/MyPosts/MyPosts.jsx"],"names":["React","Field","reduxForm","maxLengthCreator","required","s","Post","Textarea","maxLength","AddNewPostForm","props","handleSubmit","textAreaContainer","addButtons","addPostButton","AddNewPostReduxForm","form","MyPosts","memo","console","log","postsElements","posts","reverse","map","post","id","message","likesCount","onAddPost","formData","addPostCreator","newPostText","textAreaLabelBlock","posts_block__label","post_new_block"],"mappings":"2JAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,SAAhB,KAAiC,YAAjC,CACA,OAASC,gBAAT,CAA2BC,QAA3B,KAA2C,sCAA3C,CACA,MAAOC,CAAAA,CAAP,KAAc,sBAAd,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CACA,OAASC,QAAT,KAAyB,4CAAzB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAGL,gBAAgB,CAAC,EAAD,CAAlC,CAEA;AACA,GAAMM,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,CAChC,mBACE,cAAM,QAAQ,CAAEA,KAAK,CAACC,YAAtB,wBACE,YAAK,SAAS,CAAEN,CAAC,CAACO,iBAAlB,uBACE,KAAC,KAAD,EAAO,SAAS,CAAEL,QAAlB,CAA4B,IAAI,CAAC,aAAjC,CAA+C,WAAW,CAAC,kBAA3D,CACE,QAAQ,CAAE,CAACH,QAAD,CAAWI,SAAX,CADZ,EADF,EADF,cAME,YAAK,SAAS,CAAEH,CAAC,CAACQ,UAAlB,uBACE,eAAQ,SAAS,CAAER,CAAC,CAACS,aAArB,sBADF,EANF,GADF,CAYD,CAbD,CAeA;AACA,GAAMC,CAAAA,mBAAmB,CAAGb,SAAS,CAAC,CACpCc,IAAI,CAAE,SAD8B,CAAD,CAAT,CAEzBP,cAFyB,CAA5B,CAIA;AACA,GAAMQ,CAAAA,OAAO,cAAGjB,KAAK,CAACkB,IAAN,CAAW,SAAAR,KAAK,CAAI,CAElC;AACA;AACA;AACA;AAEAS,OAAO,CAACC,GAAR,CAAY,iBAAZ,EACA;AACA,GAAIC,CAAAA,aAAa,CAAG,mBAAIX,KAAK,CAACY,KAAV,EACjBC,OADiB,GAEjBC,GAFiB,CAEb,SAACC,IAAD,qBACH,KAAC,IAAD,EAAoB,EAAE,CAAEA,IAAI,CAACC,EAA7B,CAAiC,OAAO,CAAED,IAAI,CAACE,OAA/C,CAAwD,UAAU,CAAEF,IAAI,CAACG,UAAzE,EAAWH,IAAI,CAACC,EAAhB,CADG,EAFa,CAApB,CAMA,GAAIG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,QAAD,CAAc,CAC5BX,OAAO,CAACC,GAAR,CAAYU,QAAZ,EACApB,KAAK,CAACqB,cAAN,CAAqBD,QAAQ,CAACE,WAA9B,EACD,CAHD,CAMA,mBACE,oCACE,aAAK,SAAS,CAAE3B,CAAC,CAAC4B,kBAAlB,wBACE,WAAI,SAAS,CAAE5B,CAAC,CAAC6B,kBAAjB,sBADF,cAGE,YAAK,SAAS,CAAE7B,CAAC,CAAC8B,cAAlB,uBACE,KAAC,mBAAD,EAAqB,QAAQ,CAAEN,SAA/B,EADF,EAHF,GADF,cASE,YAAK,SAAS,CAAExB,CAAC,CAACiB,KAAlB,UAA0BD,aAA1B,EATF,GADF,CAaD,CAlCe,CAAhB,CAoCA,cAAeJ,CAAAA,OAAf","sourcesContent":["import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Textarea } from \"./../../common/FormsControls/FormsControls\"\r\n\r\nconst maxLength = maxLengthCreator(10);\r\n\r\n// form\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={s.textAreaContainer}>\r\n        <Field component={Textarea} name=\"newPostText\" placeholder=\"Enter post text!\"\r\n          validate={[required, maxLength]} />\r\n      </div>\r\n\r\n      <div className={s.addButtons}>\r\n        <button className={s.addPostButton}>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\n// form wrapper\r\nconst AddNewPostReduxForm = reduxForm({\r\n  form: \"newPost\"\r\n})(AddNewPostForm)\r\n\r\n// component\r\nconst MyPosts = React.memo(props => {\r\n\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   return nextProps !== this.props\r\n  //     || nextState !== this.state;\r\n  // }\r\n\r\n  console.log(\"my posts render\");\r\n  // get\r\n  let postsElements = [...props.posts]\r\n    .reverse()\r\n    .map((post) => (\r\n      <Post key={post.id} id={post.id} message={post.message} likesCount={post.likesCount} />\r\n    ));\r\n\r\n  let onAddPost = (formData) => {\r\n    console.log(formData);\r\n    props.addPostCreator(formData.newPostText);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.textAreaLabelBlock}>\r\n        <h3 className={s.posts_block__label}>My posts</h3>\r\n\r\n        <div className={s.post_new_block}>\r\n          <AddNewPostReduxForm onSubmit={onAddPost} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n"]},"metadata":{},"sourceType":"module"}